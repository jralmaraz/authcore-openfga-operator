name: CI

on:
  pull_request:
    branches: [ main, develop ]
  push:
    branches: [ main, develop ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Test, Format, and Lint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust: [stable]
        include:
          - rust: stable
            check_fmt: true
            check_clippy: true
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust ${{ matrix.rust }}
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: ${{ matrix.rust }}
        components: ${{ matrix.check_fmt && 'rustfmt' || '' }}${{ matrix.check_clippy && matrix.check_fmt && ',' || '' }}${{ matrix.check_clippy && 'clippy' || '' }}
    
    - name: Install sccache
      uses: mozilla-actions/sccache-action@v0.0.5
      continue-on-error: true
      id: sccache-install
    
    - name: Cache cargo registry and dependencies
      uses: actions/cache@v4
      continue-on-error: true
      with:
        path: |
          ~/.cargo/registry/index
          ~/.cargo/registry/cache
          ~/.cargo/git/db
          target
        key: ${{ runner.os }}-${{ matrix.rust }}-cargo-test-${{ hashFiles('**/Cargo.lock') }}-${{ hashFiles('**/Cargo.toml') }}
        restore-keys: |
          ${{ runner.os }}-${{ matrix.rust }}-cargo-test-${{ hashFiles('**/Cargo.lock') }}-
          ${{ runner.os }}-${{ matrix.rust }}-cargo-test-
          ${{ runner.os }}-${{ matrix.rust }}-cargo-
          ${{ runner.os }}-cargo-
    
    - name: Configure sccache
      run: |
        # Test if sccache is working properly
        if [ "${{ steps.sccache-install.outcome }}" = "success" ] && command -v sccache >/dev/null 2>&1; then
          # Test sccache connectivity to GitHub Actions cache
          if sccache --show-stats >/dev/null 2>&1; then
            echo "‚úÖ Configuring sccache with GitHub Actions backend"
            echo "SCCACHE_GHA_ENABLED=true" >> $GITHUB_ENV
            echo "RUSTC_WRAPPER=sccache" >> $GITHUB_ENV
            sccache --show-stats || echo "‚ö†Ô∏è sccache stats unavailable but proceeding"
          else
            echo "‚ö†Ô∏è sccache connectivity test failed, likely GitHub Actions cache service issue"
            echo "üîÑ Proceeding without sccache to avoid build failures"
          fi
        else
          echo "‚ö†Ô∏è sccache not available, proceeding without sccache"
        fi
    
    - name: Check formatting
      if: matrix.check_fmt
      run: cargo fmt -- --check
    
    - name: Run clippy
      if: matrix.check_clippy
      run: make clippy
    
    - name: Run compile check
      run: make compile
    
    - name: Run tests
      run: make test

  build:
    name: Build Verification
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
    
    - name: Install sccache
      uses: mozilla-actions/sccache-action@v0.0.5
      continue-on-error: true
      id: sccache-install
    
    - name: Cache cargo registry and dependencies
      uses: actions/cache@v4
      continue-on-error: true
      with:
        path: |
          ~/.cargo/registry/index
          ~/.cargo/registry/cache
          ~/.cargo/git/db
          target
        key: ${{ runner.os }}-cargo-build-${{ hashFiles('**/Cargo.lock') }}-${{ hashFiles('**/Cargo.toml') }}
        restore-keys: |
          ${{ runner.os }}-cargo-build-${{ hashFiles('**/Cargo.lock') }}-
          ${{ runner.os }}-cargo-build-
          ${{ runner.os }}-cargo-
    
    - name: Configure sccache
      run: |
        # Test if sccache is working properly
        if [ "${{ steps.sccache-install.outcome }}" = "success" ] && command -v sccache >/dev/null 2>&1; then
          # Test sccache connectivity to GitHub Actions cache
          if sccache --show-stats >/dev/null 2>&1; then
            echo "‚úÖ Configuring sccache with GitHub Actions backend"
            echo "SCCACHE_GHA_ENABLED=true" >> $GITHUB_ENV
            echo "RUSTC_WRAPPER=sccache" >> $GITHUB_ENV
            sccache --show-stats || echo "‚ö†Ô∏è sccache stats unavailable but proceeding"
          else
            echo "‚ö†Ô∏è sccache connectivity test failed, likely GitHub Actions cache service issue"
            echo "üîÑ Proceeding without sccache to avoid build failures"
          fi
        else
          echo "‚ö†Ô∏è sccache not available, proceeding without sccache"
        fi
    
    - name: Run build check
      run: make build